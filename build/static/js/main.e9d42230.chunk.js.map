{"version":3,"sources":["components/img/money-loader.gif","components/main/AxiosFuncs.js","components/main/AddForm.js","components/main/EditForm.js","components/main/DeleteForm.js","components/main/Main.js","components/login.js","components/navbar.js","components/chart3.js","components/ChartYearCategories.js","components/charts.js","components/registration.js","components/home.js","App.js","serviceWorker.js","js/store/dataStore.js","index.js"],"names":["module","exports","__webpack_require__","p","AxiosFuncs","addCategory","_this","postRequests","name","type","Icon","addRecord","newRecord","userId","deleteRecord","id","deleteRequests","deleteCategory","editCategories","putRequests","editRecord","link","axios","get","concat","then","result","console","log","catch","error","delete","data","put","headers","Content-Type","response","post","AddForm","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","amount","setState","isRed","categoryId","categoriesExpense","filter","d","category","categoriesIncome","paymentMethod","_this$state","date","currency","comment","props","closeAddForm","getRecords","err","inputChange","e","_this$setState2","target","_this$setState","value","defineProperty","currencies","getCategories","_this2","getCategoriesFromDB","Date","moment","format","alert","react_default","a","createElement","className","index_es","onClick","icon","onChange","checked","map","cat","i","key","c","Component","EditForm","recordIdToEdit","closeEditForm","inputChangeType","record","records","r","paymentMethodId","DeleteForm","recordIdToDelete","res","closeDeleteForm","library","add","faAngleLeft","faAngleRight","faCheck","faWindowClose","faPlus","faMinus","faMoneyBillAlt","faCreditCard","faTrashAlt","faShekelSign","faDollarSign","faEuroSign","faEdit","ITEMSPERPAGE","Main","inject","observer","getDataFromDB","allRecords","sort","b","isLoading","changeInput","event","changePage","action","currentPage","getCurrentRecords","showLoader","src","loader","showHeader","fields","f","showSearchBar","startDate","endDate","placeholder","textTosearch","showPagination","startIndex","endIndex","lastPage","size","showAddForm","toConsumableArray","toLowerCase","includes","Math","ceil","length","slice","renderRecords","currencyIcon","NIS","EUR","USD","_this$getCurrentRecor","store","loggedIn","showNavBar","components_main_AddForm","main_EditForm","components_main_DeleteForm","LoginForm","_showErrorMessage","setTimeout","toggle","handleChange","logIn","username","password","status","redirectTo","errorMessage","showErrorMessage","clear","Redirect","to","pathname","style","color","faGlobe","ReactTimeout","Navbar","Link","ChartCategoriesExpenses","getDate","currentDate","currentYear","getFullYear","currentMonth","getMonth","year","month","BarChart","width","height","dataExpense","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","YAxis","Tooltip","Legend","Bar","stackId","fill","ChartYearCategories","dataForChart","LineChart","dataExpenseIncomeYear","Line","activeDot","Charts","chart3","components_ChartYearCategories","Registration","sendNewUserData","clearInputs","getRegistration","Home","registration","App","BrowserRouter","navbar","logout","Route","exact","path","component","render","login","components_main_Main","components_charts","Boolean","window","location","hostname","match","monthNames","1","2","3","4","5","6","7","8","9","10","11","12","getDataForCharts","reaction","generateNewData","generateNewDataYear","addNewUserToState","newUser","users","push","observable","_this3","_this4","_this5","categoryAmount","categories","forEach","item","arr","index","indexOf","categoryName","_this6","_this7","limitation","_this8","resultArray","monthAmount","monthAmountIncome","clientTime","recMonth","undefined","m","expense","income","_this9","cFrom","cTo","cAmount","ReactDOM","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"yHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oYCiGzBC,EADI,gEA5BjBC,YAAc,WACZC,EAAKC,aAAa,WAAY,CAAEC,KAAM,WAAYC,KAAM,EAAGC,KAAM,kBAEnEC,UAAY,SAACC,GAIX,OADAA,EAAUC,OAAS,EACZP,EAAKC,aAAa,SAAUK,SAGrCE,aAAe,SAACC,GAEd,OAAOT,EAAKU,eAAe,SAAUD,SAEvCE,eAAiB,WAEfX,EAAKU,eAAe,WADX,SAGXE,eAAiB,WACfZ,EAAKa,YAAY,WAAY,CAAEJ,GAAI,GAAIP,KAAM,QAASC,KAAM,EAAGC,KAAM,kBAEvEU,WAAa,SAACR,GAGZ,OADAA,EAAUC,OAAS,EACZP,EAAKa,YAAY,SAASP,4DAtFvBS,GACV,OAAOC,IAAMC,IAAN,IAAAC,OAAcH,IAClBI,KAAK,SAAAC,GACJC,QAAQC,IAAIF,KAEbG,MAAM,SAAUC,GACfH,QAAQC,IAAI,6CAA8CE,4CAKjDT,EAAMN,GAInB,OADAY,QAAQC,IAAIP,EAAMN,GACXO,IAAMS,OAAN,WAAAP,OAAwBH,EAAxB,KAAAG,OAAgCT,IACpCU,KAAK,SAAAC,GACJC,QAAQC,IAAI,UAAWF,KAExBG,MAAM,SAAUC,GACfH,QAAQC,IAAI,gDAAiDE,yCAIvDT,EAAMW,GAChB,OAAOV,IAAMW,IAAN,IAAAT,OAAcH,GAAQW,EAAM,CACjCE,QAAS,CACPC,eAAgB,sBAEjBV,KAAK,SAAAW,GACNT,QAAQC,IAAI,aAAcQ,KACzBP,MAAM,SAAUC,GACjBH,QAAQC,IAAIE,0CAIHT,EAAMW,GAEjB,OAAOV,IAAMe,KAAN,IAAAb,OAAeH,GAAQW,EAAM,CAClCE,QAAS,CACPC,eAAgB,sBAEjBV,KAAK,SAAAW,GACNT,QAAQC,IAAI,0BAA2BQ,KACtCP,MAAM,SAAUC,GACjBH,QAAQC,IAAI,sDAAuDE,6CAOrEH,QAAQC,IAAI,OAEZ,OAAON,IAAMC,IAAN,YAAAC,OADM,kDAMb,OAAOF,IAAMC,IAAN,0CCyDIe,cAnHb,SAAAA,IAAc,IAAAhC,EAAA,OAAAiC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,IACZhC,EAAAiC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,KAAAH,QAmCF9B,UAAY,WAGV,GAAIL,EAAKuC,MAAMC,QAAU,EACvBxC,EAAKyC,SAAS,CAACC,MAAO,YADxB,CAIA,IAGIC,GAHgC,YAApB3C,EAAKuC,MAAMpC,KACzBH,EAAKuC,MAAMK,kBAAkBC,OAAO,SAAAC,GAAC,OAAIA,EAAE5C,OAASF,EAAKuC,MAAMQ,WAC/D/C,EAAKuC,MAAMS,iBAAiBH,OAAO,SAAAC,GAAC,OAAIA,EAAE5C,OAASF,EAAKuC,MAAMQ,YACtC,GAAGtC,GACzBwC,EAA6C,SAA7BjD,EAAKuC,MAAMU,cAA2B,EAAI,EAC1D9C,EAA2B,YAApBH,EAAKuC,MAAMpC,KAAqB,EAAI,EAZ/B+C,EAa0BlD,EAAKuC,MAC3CjC,EAAY,CAAE6C,KAdFD,EAaVC,KACkBhD,OAAMwC,aAAYM,gBAAeT,OAdzCU,EAaJV,OACqDY,SAdjDF,EAaIE,SACuDC,QAd3DH,EAacG,SAE9BvD,EAAWO,UAAUC,GAAWa,KAAK,SAAAC,GACnCpB,EAAKsD,MAAMC,eACXvD,EAAKsD,MAAME,eAEXjC,MAAM,SAAAkC,GAAG,OAAIpC,QAAQC,IAAImC,OAvDfzD,EA0Dd0D,YAAc,SAACC,GAAM,IAAAC,EACnB,GAAsB,SAAlBD,EAAEE,OAAO3D,KAAiB,KAAA4D,EACxBf,EAIJ,OAHAA,EAA+B,WAAnBY,EAAEE,OAAOE,MAAsB/D,EAAKuC,MAAMS,iBAAiB,GAAG9C,KAC/BF,EAAKuC,MAAMK,kBAAkB,GAAG1C,UAC3EF,EAAKyC,UAALqB,EAAA,GAAA7B,OAAA+B,EAAA,EAAA/B,CAAA6B,EAAiBH,EAAEE,OAAO3D,KAAOyD,EAAEE,OAAOE,OAA1C9B,OAAA+B,EAAA,EAAA/B,CAAA6B,EAAA,WAAiDf,GAAjDe,IAGF9D,EAAKyC,UAALmB,EAAA,GAAA3B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAiBD,EAAEE,OAAO3D,KAAOyD,EAAEE,OAAOE,OAA1C9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,QAAwD,IAAxDA,KAhEA5D,EAAK4C,kBAAoB,GACzB5C,EAAKgD,iBAAmB,GACxBhD,EAAKiE,WAAa,CAAC,MAAO,MAAO,OACjCjE,EAAKuC,MAAQ,CACXY,KAAM,GACNhD,KAAM,UACN4C,SAAU,GACVE,cAAe,OACfT,OAAQ,EACRY,SAAU,MACVC,QAAS,GACTT,kBAAmB,GACnBI,iBAAkB,GAClBN,MAAO,IAfG1C,mFAoBZmC,KAAK+B,wDAGS,IAAAC,EAAAhC,KACdrC,EAAWsE,sBACRjD,KAAK,SAAAC,GACJ,IAAIwB,EAAoBxB,EAAOM,KAAKmB,OAAO,SAAAC,GAAC,OAAe,IAAXA,EAAE3C,OAC9C6C,EAAmB5B,EAAOM,KAAKmB,OAAO,SAAAC,GAAC,OAAe,IAAXA,EAAE3C,OAC7CgD,EAAO,IAAIkB,KACflB,EAAOmB,IAAOnB,GAAMoB,OAAO,cAC3B,IAAIxB,EAAWH,EAAkB,GAAG1C,KACpCiE,EAAK1B,SAAS,CAAEG,oBAAmBI,mBAAkBG,OAAMJ,eAE5DxB,MAAM,SAAAkC,GAAQpC,QAAQC,IAAImC,GAAMe,MAAM,sDAqCzC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,QAAS3C,KAAKmB,MAAMC,aAAcwB,KAAK,kBACtFN,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcI,SAAU7C,KAAKuB,YAAaxD,KAAK,QAC5DuE,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,QAAQ8E,QAA6B,YAApB9C,KAAKI,MAAMpC,KAAoB6E,SAAU7C,KAAKuB,YAAaK,MAAM,UAAU7D,KAAK,SAA3H,KAA2IuE,EAAAC,EAAAC,cAAA,iBAC3IF,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,QAAQ8E,QAA6B,WAApB9C,KAAKI,MAAMpC,KAAmB6E,SAAU7C,KAAKuB,YAAaK,MAAM,SAAS7D,KAAK,SAAxH,MAEFuE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcI,SAAU7C,KAAKuB,YAAaxD,KAAK,iBAC5DuE,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,QAAQ8E,QAAsC,SAA7B9C,KAAKI,MAAMU,cAA0B+B,SAAU7C,KAAKuB,YAAaK,MAAM,OAAO7D,KAAK,kBAA3H,KAAoJuE,EAAAC,EAAAC,cAAA,iBACpJF,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,QAAQ8E,QAAsC,SAA7B9C,KAAKI,MAAMU,cAA0B+B,SAAU7C,KAAKuB,YAAaK,MAAM,OAAO7D,KAAK,kBAA3H,MAGFuE,EAAAC,EAAAC,cAAA,qBAAiBF,EAAAC,EAAAC,cAAA,eAAMF,EAAAC,EAAAC,cAAA,SAAOzE,KAAK,OAAOC,KAAK,OAAO4D,MAAO5B,KAAKI,MAAMY,KAAM6B,SAAU7C,KAAKuB,eAE7Fe,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IAAsBH,EAAAC,EAAAC,cAAA,UAAQzE,KAAK,WAAW6D,MAAO5B,KAAKI,MAAMQ,SAAUiC,SAAU7C,KAAKuB,aAClE,YAApBvB,KAAKI,MAAMpC,KAAqBgC,KAAKI,MAAMK,kBAAkBsC,IAAI,SAACC,EAAKC,GAAN,OAChEX,EAAAC,EAAAC,cAAA,UAAQU,IAAKD,EAAGrB,MAAOoB,EAAIjF,MAAOiF,EAAIjF,QACpCiC,KAAKI,MAAMS,iBAAiBkC,IAAI,SAACC,EAAKC,GAAN,OAClCX,EAAAC,EAAAC,cAAA,UAAQU,IAAKD,EAAGrB,MAAOoB,EAAIjF,MAAOiF,EAAIjF,UAI1CuE,EAAAC,EAAAC,cAAA,sBAAkBF,EAAAC,EAAAC,cAAA,OAAKC,UAAWzC,KAAKI,MAAMG,OAA3B,IAAmC+B,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,SAASD,KAAK,SAAS6D,MAAO5B,KAAKI,MAAMC,OAAQwC,SAAU7C,KAAKuB,cAA/G,KAElBe,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IAAsBH,EAAAC,EAAAC,cAAA,UAAQzE,KAAK,WAAW6D,MAAO5B,KAAKI,MAAMa,SAAU4B,SAAU7C,KAAKuB,aACtFvB,KAAK8B,WAAWiB,IAAI,SAACI,EAAGF,GAAJ,OACnBX,EAAAC,EAAAC,cAAA,UAAQU,IAAKD,EAAGrB,MAAOuB,GAAIA,KAFT,MAMtBb,EAAAC,EAAAC,cAAA,uBAAmBF,EAAAC,EAAAC,cAAA,eAAMF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,OAAOD,KAAK,UAAU6D,MAAO5B,KAAKI,MAAMc,QAAS2B,SAAU7C,KAAKuB,cAAlF,MAErBe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS3C,KAAK9B,WAAtB,iBA7GYkF,aCyHPC,cAxHb,SAAAA,IAAc,IAAAxF,EAAA,OAAAiC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqD,IACZxF,EAAAiC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuD,GAAAlD,KAAAH,QA2CFrB,WAAa,WACXO,QAAQC,IAAItB,EAAKuC,OACjB,IAGII,GAHgC,YAApB3C,EAAKuC,MAAMpC,KACzBH,EAAKuC,MAAMK,kBAAkBC,OAAO,SAAAC,GAAC,OAAIA,EAAE5C,OAASF,EAAKuC,MAAMQ,WAC/D/C,EAAKuC,MAAMS,iBAAiBH,OAAO,SAAAC,GAAC,OAAIA,EAAE5C,OAASF,EAAKuC,MAAMQ,YACtC,GAAGtC,GACzBwC,EAA6C,SAA7BjD,EAAKuC,MAAMU,cAA2B,EAAI,EAC1D9C,EAA2B,YAApBH,EAAKuC,MAAMpC,KAAqB,EAAI,EAP9B+C,EAQyBlD,EAAKuC,MAAzCY,EARWD,EAQXC,KAAMX,EARKU,EAQLV,OAAQY,EARHF,EAQGE,SAAUC,EARbH,EAQaG,QAE1B/C,EAAY,CAAEG,GADTT,EAAKsD,MAAMmC,eACEtC,OAAMhD,OAAMwC,aAAYM,gBAAeT,SAAQY,WAAUC,WAC/EvD,EAAWgB,WAAWR,GAAWa,KAAK,SAAAC,GACpCpB,EAAKsD,MAAMoC,gBACX1F,EAAKsD,MAAME,eAEXjC,MAAM,SAAAkC,GAAG,OAAIpC,QAAQC,IAAImC,MA3DfzD,EA8Dd0D,YAAc,SAACC,GACb3D,EAAKyC,SAALR,OAAA+B,EAAA,EAAA/B,CAAA,GAAiB0B,EAAEE,OAAO3D,KAAOyD,EAAEE,OAAOE,SA/D9B/D,EAkEd2F,gBAAkB,SAAChC,GAAM,IAAAC,EACnBb,EACJA,EAA+B,WAAnBY,EAAEE,OAAOE,MAAsB/D,EAAKuC,MAAMS,iBAAiB,GAAG9C,KAC7BF,EAAKuC,MAAMK,kBAAkB,GAAG1C,KAC7EmB,QAAQC,IAAIyB,GACZ/C,EAAKyC,UAALmB,EAAA,GAAA3B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAiBD,EAAEE,OAAO3D,KAAOyD,EAAEE,OAAOE,OAA1C9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,WAAiDb,GAAjDa,KArEA5D,EAAK4C,kBAAoB,GACzB5C,EAAKgD,iBAAmB,GACxBhD,EAAKiE,WAAa,CAAC,MAAO,MAAO,OACjCjE,EAAKuC,MAAQ,CACXY,KAAM,GACNhD,KAAM,GACN4C,SAAU,GACVE,cAAe,GACfT,OAAQ,GACRY,SAAU,GACVC,QAAS,GACTT,kBAAmB,GACnBI,iBAAkB,IAdRhD,mFAmBZmC,KAAK+B,gBACL,IAAIzD,EAAK0B,KAAKmB,MAAMmC,eAChBG,EAASzD,KAAKmB,MAAMuC,QAAQhD,OAAO,SAAAiD,GAAC,OAAIA,EAAErF,KAAOA,IAAI,GACpD0C,EAAoEyC,EAApEzC,KAAMhD,EAA8DyF,EAA9DzF,KAAM4C,EAAwD6C,EAAxD7C,SAAUgD,EAA8CH,EAA9CG,gBAAiBvD,EAA6BoD,EAA7BpD,OAAQY,EAAqBwC,EAArBxC,SAAUC,EAAWuC,EAAXvC,QAC9DlD,EAAgB,IAATA,EAAa,UAAY,SAChC4C,EAAWA,EAAS7C,KACpB,IAAI+C,EAAoC,IAApB8C,EAAwB,OAAS,OACrD1E,QAAQC,IAAI,kBACZD,QAAQC,IAAIyB,GACZZ,KAAKM,SAAS,CAACU,OAAMhD,OAAM4C,WAAUE,gBAAeT,SAAQY,WAAUC,oDAGxD,IAAAc,EAAAhC,KACdrC,EAAWsE,sBACRjD,KAAK,SAAAC,GACJ,IAAIwB,EAAoBxB,EAAOM,KAAKmB,OAAO,SAAAC,GAAC,OAAe,IAAXA,EAAE3C,OAC9C6C,EAAmB5B,EAAOM,KAAKmB,OAAO,SAAAC,GAAC,OAAe,IAAXA,EAAE3C,OAC7CgD,EAAO,IAAIkB,KACflB,EAAOmB,IAAOnB,GAAMoB,OAAO,cAC3B,IAAIxB,EAAWH,EAAkB,GAAG1C,KACpCiE,EAAK1B,SAAS,CAAEG,oBAAmBI,mBAAkBG,OAAMJ,eAE5DxB,MAAM,SAAAkC,GAAG,OAAIpC,QAAQC,IAAImC,sCAkC5B,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,QAAS3C,KAAKmB,MAAMoC,cAAeX,KAAK,kBACvFN,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcI,SAAU7C,KAAKwD,gBAAiBzF,KAAK,QAChEuE,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,QAAQ8E,QAA6B,YAApB9C,KAAKI,MAAMpC,KAAoB6E,SAAU7C,KAAKwD,gBAAiB5B,MAAM,UAAU7D,KAAK,SAA/H,KAA+IuE,EAAAC,EAAAC,cAAA,iBAC/IF,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,QAAQ8E,QAA6B,WAApB9C,KAAKI,MAAMpC,KAAmB6E,SAAU7C,KAAKwD,gBAAiB5B,MAAM,SAAS7D,KAAK,SAA5H,MAGFuE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcI,SAAU7C,KAAKuB,YAAaxD,KAAK,iBAC5DuE,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,QAAQ8E,QAAsC,SAA7B9C,KAAKI,MAAMU,cAA0B+B,SAAU7C,KAAKuB,YAAaK,MAAM,OAAO7D,KAAK,kBAA3H,KAAoJuE,EAAAC,EAAAC,cAAA,iBACpJF,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,QAAQ8E,QAAsC,SAA7B9C,KAAKI,MAAMU,cAA0B+B,SAAU7C,KAAKuB,YAAaK,MAAM,OAAO7D,KAAK,kBAA3H,MAGFuE,EAAAC,EAAAC,cAAA,qBAAiBF,EAAAC,EAAAC,cAAA,eAAMF,EAAAC,EAAAC,cAAA,SAAOzE,KAAK,OAAOC,KAAK,OAAO4D,MAAO5B,KAAKI,MAAMY,KAAM6B,SAAU7C,KAAKuB,eAE7Fe,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IAAsBH,EAAAC,EAAAC,cAAA,UAAQzE,KAAK,WAAW6D,MAAO5B,KAAKI,MAAMQ,SAAUiC,SAAU7C,KAAKuB,aAClE,YAApBvB,KAAKI,MAAMpC,KAAqBgC,KAAKI,MAAMK,kBAAkBsC,IAAI,SAACC,EAAKC,GAAN,OAChEX,EAAAC,EAAAC,cAAA,UAAQU,IAAKD,EAAGrB,MAAOoB,EAAIjF,MAAOiF,EAAIjF,QACpCiC,KAAKI,MAAMS,iBAAiBkC,IAAI,SAACC,EAAKC,GAAN,OAClCX,EAAAC,EAAAC,cAAA,UAAQU,IAAKD,EAAGrB,MAAOoB,EAAIjF,MAAOiF,EAAIjF,UAI1CuE,EAAAC,EAAAC,cAAA,sBAAkBF,EAAAC,EAAAC,cAAA,eAAMF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,SAASD,KAAK,SAAS6D,MAAO5B,KAAKI,MAAMC,OAAQwC,SAAU7C,KAAKuB,eAEpGe,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IAAsBH,EAAAC,EAAAC,cAAA,UAAQzE,KAAK,WAAW6D,MAAO5B,KAAKI,MAAMa,SAAU4B,SAAU7C,KAAKuB,aACtFvB,KAAK8B,WAAWiB,IAAI,SAACI,EAAGF,GAAJ,OACnBX,EAAAC,EAAAC,cAAA,UAAQU,IAAKD,EAAGrB,MAAOuB,GAAIA,KAFT,MAMtBb,EAAAC,EAAAC,cAAA,uBAAmBF,EAAAC,EAAAC,cAAA,eAAMF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,OAAOD,KAAK,UAAU6D,MAAO5B,KAAKI,MAAMc,QAAS2B,SAAU7C,KAAKuB,cAAlF,MAErBe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS3C,KAAKrB,YAAtB,iBAlHayE,aCuBRS,qNAtBbxF,aAAe,WACbV,EAAWU,aAAaR,EAAKsD,MAAM2C,kBAAkB9E,KAAM,SAAA+E,GACzDlG,EAAKsD,MAAM6C,kBACXnG,EAAKsD,MAAME,eACVjC,MAAM,SAAAkC,GAAG,OAAIpC,QAAQC,IAAImC,8EAI5B,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,QAAS3C,KAAKmB,MAAM6C,gBAAiBpB,KAAK,kBACzFN,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQG,QAAS3C,KAAK3B,cAAtB,OACAiE,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,UAAQG,QAAS3C,KAAKmB,MAAM6C,iBAA5B,eAhBeZ,yDCQzBa,IAAQC,IAAIC,IAAaC,IAAcC,IAASC,IAAeC,IAAQC,IAASC,IAAgBC,IAAcC,IAAYC,IAAcC,IAAcC,IAAYC,KAClK,kBAAMC,EAAe,GAuJNC,EAtJdC,YAAO,WACPC,0BAEC,SAAAF,IAAc,IAAApH,EAAA,OAAAiC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IACZpH,EAAAiC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,QAqBFqB,WAAY,WACV1D,EAAWyH,gBAAgBpG,KAAK,SAAAC,GAC9B,IAAIoG,EAAapG,EAAOM,KAAK,GAAGkE,OAChC4B,EAAWC,KAAK,SAAC/C,EAAGgD,GAAJ,OAAW,IAAIrD,KAAKqD,EAAEvE,MAAQ,IAAIkB,KAAKK,EAAEvB,QACzDnD,EAAKyC,SAAS,CAAE+E,aAAYG,WAAW,MACtCpG,MAAM,SAAUC,GACjBH,QAAQC,IAAIE,MA5BFxB,EAgCd4H,YAAc,SAACC,GAAD,OAAW7H,EAAKyC,SAALR,OAAA+B,EAAA,EAAA/B,CAAA,GACtB4F,EAAMhE,OAAO3D,KAAO2H,EAAMhE,OAAOE,SAjCtB/D,EAoCd8H,WAAa,SAACC,GACZ,IAAIC,EAAchI,EAAKuC,MAAMyF,YAClB,SAAXD,EAAoBC,IAAgBA,IACpChI,EAAKyC,SAAS,CAAEuF,gBAChBhI,EAAKiI,qBAxCOjI,EA6CdkI,WAAa,kBAAMlI,EAAKuC,MAAMoF,UAAYlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA0BH,EAAAC,EAAAC,cAAA,OAAKwD,IAAKC,OAAmB,MA7CnFpI,EAgDdqI,WAAa,kBAAM5D,EAAAC,EAAAC,cAAA,OAAKlE,GAAG,eACxBT,EAAKsI,OAAOpD,IAAI,SAACqD,EAAGnD,GAAJ,OAAUX,EAAAC,EAAAC,cAAA,OAAKU,IAAKD,GAAImD,OAjD7BvI,EAoDdwI,cAAgB,kBAAM/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,SACdH,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,OAAOD,KAAK,YAAY6D,MAAO/D,EAAKuC,MAAMkG,UAAWzD,SAAUhF,EAAK4H,cAAqBnD,EAAAC,EAAAC,cAAA,iBADvF,OAEhBF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,OAAOD,KAAK,UAAU6D,MAAO/D,EAAKuC,MAAMmG,QAAS1D,SAAUhF,EAAK4H,cAAqBnD,EAAAC,EAAAC,cAAA,iBACrGF,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,OAAQwI,YAAY,oBAAoBzI,KAAK,eAAe6D,MAAO/D,EAAKuC,MAAMqG,aAAc5D,SAAUhF,EAAK4H,gBAvD3G5H,EA0Dd6I,eAAiB,SAACC,EAAYC,EAAUC,GAAvB,OACfvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACe,IAA3B5E,EAAKuC,MAAMyF,YAAoBvD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,QAAS,SAACnB,GAAD,OAAO3D,EAAK8H,WAAW,UAAU/C,KAAK,aAAakE,KAAK,OAAU,KAC5HxE,EAAAC,EAAAC,cAAA,iBAFF,IAEkBmE,EAFlB,MAEiCC,EAFjC,IAE2CtE,EAAAC,EAAAC,cAAA,iBACxC3E,EAAKuC,MAAMyF,cAAgBgB,EAAWvE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,QAAS,kBAAM9E,EAAK8H,WAAW,SAAS/C,KAAK,cAAckE,KAAK,OAAU,OA9DxHjJ,EAiEdkJ,YAAc,WACZlJ,EAAKyC,SAAS,CAAEyG,aAAa,KAlEjBlJ,EAqEduD,aAAe,kBAAMvD,EAAKyC,SAAS,CAAEyG,aAAa,KArEpClJ,EAsEd0F,cAAgB,kBAAM1F,EAAKyC,SAAS,CAAEgD,gBAAiB,KAtEzCzF,EAuEdmG,gBAAkB,kBAAMnG,EAAKyC,SAAS,CAAEwD,kBAAmB,KAvE7CjG,EA0EdiI,kBAAoB,WAClB,IAAIpC,EAAO5D,OAAAkH,EAAA,EAAAlH,CAAOjC,EAAKuC,MAAMiF,YACzBsB,GAAc9I,EAAKuC,MAAMyF,YAAc,GAAKb,EAAe,EAC3D4B,EAAWD,EAAa3B,EAAe,EAC3CtB,EAAUA,EAAQhD,OAAO,SAAAyC,GAAC,OACvBA,EAAC,QAAY8D,cAAcC,SAASrJ,EAAKuC,MAAMqG,aAAaQ,iBACzD9D,EAAEnC,MAAQnD,EAAKuC,MAAMkG,WAAsC,KAAzBzI,EAAKuC,MAAMkG,aAC7CnD,EAAEnC,MAAQnD,EAAKuC,MAAMmG,SAAkC,KAAvB1I,EAAKuC,MAAMmG,WAEjD,IAAIM,EAAWM,KAAKC,KAAK1D,EAAQ2D,OAASrC,GAE1C,MAAO,CAAEtB,QADTA,EAAUA,EAAQ4D,MAAMX,EAAa,EAAGC,GACtBD,aAAYC,WAAUC,aArF5BhJ,EAwFd0J,cAAgB,SAAC7D,GAAD,OACdpB,EAAAC,EAAAC,cAAA,OAAKlE,GAAG,kBACLT,EAAKqI,aACLxC,EAAQX,IAAI,SAAAI,GACX,IAAInC,EAAOmB,IAAOgB,EAAEnC,MAAMoB,OAAO,YACjC,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOS,IAAKC,EAAE7E,IAC3BgE,EAAAC,EAAAC,cAAA,WAAMxB,GACNsB,EAAAC,EAAAC,cAAA,WAAOW,EAAEnF,KAAOsE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBE,KAAK,SAAYN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBE,KAAK,WACxEN,EAAAC,EAAAC,cAAA,WAAMW,EAAEvC,SAAS7C,MACjBuE,EAAAC,EAAAC,cAAA,WAA+B,SAAzBW,EAAErC,cAAc/C,KAAkBuE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBE,KAAK,mBAAsBN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBE,KAAK,gBAA1G,KACAN,EAAAC,EAAAC,cAAA,WAAMW,EAAE9C,QACRiC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBE,KAAM/E,EAAK2J,aAAarE,EAAElC,aAChDqB,EAAAC,EAAAC,cAAA,WAAMW,EAAEjC,SACRoB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBE,KAAK,YAAYD,QAAS,kBAAM9E,EAAKQ,aAAa8E,EAAE7E,OACrEgE,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBE,KAAK,OAAOD,QAAS,kBAAM9E,EAAKc,WAAWwE,EAAE7E,aAzG5DT,EA+Gdc,WAAa,SAACL,GACZT,EAAKyC,SAAS,CAAEgD,eAAgBhF,KAhHpBT,EAmHdQ,aAAe,SAACC,GACdT,EAAKyC,SAAS,CAAEwD,iBAAkBxF,KAlHlCT,EAAKsI,OAAS,CAAC,OAAQ,OAAQ,WAAY,SAAU,SAAU,WAAY,YAC3EtI,EAAK2J,aAAe,CAAEC,IAAO,cAAeC,IAAO,YAAaC,IAAO,eACvE9J,EAAKuC,MAAQ,CACXoF,WAAW,EACXH,WAAY,GACZoB,aAAc,GACdH,UAAW,aACXC,QAAS,aACTV,YAAa,EACbkB,aAAa,EACbzD,gBAAiB,EACjBQ,kBAAmB,GAbTjG,mFAmBZmC,KAAKqB,8CAoGE,IAAAW,EAAAhC,KAAA4H,EAC2C5H,KAAK8F,oBAAjDpC,EADCkE,EACDlE,QAASiD,EADRiB,EACQjB,WAAYC,EADpBgB,EACoBhB,SAAUC,EAD9Be,EAC8Bf,SACrC,OAEEvE,EAAAC,EAAAC,cAAA,WACKxC,KAAKmB,MAAM0G,MAAMC,SACpBxF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACjBzC,KAAKmB,MAAM0G,MAAME,aAClBzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZzC,KAAKqG,gBACLrG,KAAK0G,eAAeC,EAAYC,EAAUC,IAE5C7G,KAAKuH,cAAc7D,GACnB1D,KAAKI,MAAM2G,YAAczE,EAAAC,EAAAC,cAACwF,EAAD,CAAS5G,aAAcpB,KAAKoB,aAAcC,WAAYrB,KAAKqB,aAAgB,MACpE,IAA/BrB,KAAKI,MAAMkD,eAAyBhB,EAAAC,EAAAC,cAACyF,EAAD,CAAU1E,cAAevD,KAAKuD,cAAeD,eAAgBtD,KAAKI,MAAMkD,eAAgBI,QAAWA,EAASrC,WAAYrB,KAAKqB,aAAgB,MAChJ,IAAjCrB,KAAKI,MAAM0D,iBAA2BxB,EAAAC,EAAAC,cAAC0F,EAAD,CAAYlE,gBAAiBhE,KAAKgE,gBAAiBF,iBAAkB9D,KAAKI,MAAM0D,iBAAkBzC,WAAYrB,KAAKqB,aAAgB,KAC1KrB,KAAK+F,eAGVzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IAAsBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBoE,KAAK,KAAKnE,QAAS,kBAAMX,EAAK+E,eAAenE,KAAK,WAE1F,aA9IYQ,+CCRb+E,UAFLjD,YAAO,WACPC,0BAEG,SAAAgD,IAAc,IAAAtK,EAAA,OAAAiC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACVtK,EAAAiC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAAhI,KAAAH,QAOJoI,kBAAoB,WAChBvK,EAAKsD,MAAMkH,WAAWxK,EAAKsD,MAAM0G,MAAMS,OAAQ,MATrCzK,EAYd0K,aAAe,SAAC7C,GACZ7H,EAAKyC,SAALR,OAAA+B,EAAA,EAAA/B,CAAA,GACK4F,EAAMhE,OAAO3D,KAAO2H,EAAMhE,OAAOE,SAd5B/D,EAqBd2K,MAAQ,WAGA3K,EAAKuC,MAAMqI,UAAY5K,EAAKuC,MAAMsI,SACtC7J,IACKe,KAAK,SAAU,CACZ6I,SAAU5K,EAAKuC,MAAMqI,SACrBC,SAAU7K,EAAKuC,MAAMsI,WAExB1J,KAAK,SAAAW,GACFT,QAAQC,IAAI,QAAQQ,GACI,MAApBA,EAASgJ,UAES,IAAhBhJ,EAASJ,MACP1B,EAAKsD,MAAM0G,MAAMC,UAAW,EAC5BjK,EAAKsD,MAAM0G,MAAMvJ,GAAKqB,EAASJ,KAAKjB,GACpCT,EAAKsD,MAAM0G,MAAMY,SAAW9I,EAASJ,KAAKxB,KAC9CF,EAAKyC,SAAS,CACVsI,WAAY,YAKhB/K,EAAKsD,MAAM0G,MAAMgB,aAAa,0BAC9BhL,EAAKsD,MAAM0G,MAAMiB,kBAAmB,EACpCjL,EAAKuK,oBACLvK,EAAKkL,aAMblL,EAAKsD,MAAM0G,MAAMgB,aAAa,yBAC9BhL,EAAKsD,MAAM0G,MAAMiB,kBAAiB,EAClCjL,EAAKuK,sBArDTvK,EAAKuC,MAAQ,CACTwI,WAAY,KACZH,SAAU,GACVC,SAAS,IALH7K,uEAkBVmC,KAAKM,SAAS,CAACmI,SAAS,GAAGC,SAAS,sCA+CpC,OAAI1I,KAAKI,MAAMwI,WACJtG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAUC,GAAI,CAAEC,SAAUlJ,KAAKI,MAAMwI,cAGxCtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAOfH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiByG,MAAO,CAAEC,MAAO,SAAW3G,UAAU,MAAMG,KAAMyG,IAASvC,KAAK,OAEhFxE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,UACDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,OAAOyE,UAAU,UAAUnE,GAAG,gBAAgBP,KAAK,WAAWyI,YAAY,WAAW5E,MAAO5B,KAAKI,MAAMqI,SAAU5F,SAAU7C,KAAKuI,iBAE5IjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,aAECH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,SAAOxE,KAAK,WAAWyE,UAAU,UAAUnE,GAAG,gBAAgBP,KAAK,WAAWyI,YAAY,WAAW5E,MAAO5B,KAAKI,MAAMsI,SAAU7F,SAAU7C,KAAKuI,gBAJjJ,KAOHjG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBE,QAAS3C,KAAKwI,OAAOlG,EAAAC,EAAAC,cAAA,uBACzDxC,KAAKmB,MAAM0G,MAAMiB,iBAAkBxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBzC,KAAKmB,MAAM0G,MAAMgB,cAAoB,aA7F9FzF,sBAsGTkG,MAAanB,YC7EboB,EA9BdrE,YAAO,WACPC,+LAKO,OACI7C,EAAAC,EAAAC,cAAA,cACMxC,KAAKmB,MAAM0G,MAAMC,SAelB,KAdOxF,EAAAC,EAAAC,cAAA,WAKIF,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAMP,GAAG,SAASxG,UAAU,+BACxBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,UANR,YASIH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAMP,GAAG,UAAUxG,UAAU,+BACzBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,oBAjBXW,6FCoDNqG,GAxDdvE,YAAO,WACPC,0BAEG,SAAAsE,IAAc,IAAA5L,EAAA,OAAAiC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyJ,IACV5L,EAAAiC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2J,GAAAtJ,KAAAH,QAcF0J,QAAU,WACR,IAAIC,EAAc,IAAIzH,KAClB0H,EAAcD,EAAYE,cAC1BC,EAAeH,EAAYI,WAC/BlM,EAAKyC,SAAS,CAAC0J,KAAKJ,EAAaK,MAAMH,KAnB7BjM,EAsBd0D,YAAc,SAACC,GACXtC,QAAQC,IAAIqC,EAAEE,OAAO3D,MACrBF,EAAKyC,SAALR,OAAA+B,EAAA,EAAA/B,CAAA,GAAiB0B,EAAEE,OAAO3D,KAAOyD,EAAEE,OAAOE,SArB1C/D,EAAKuC,MAAQ,CACT4J,KAAM,KACNC,MAAO,GALDpM,mFAYVmC,KAAK0J,2CAeL,OACIpH,EAAAC,EAAAC,cAAA,WAMOF,EAAAC,EAAAC,cAAA,+BACHF,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAUC,MAAO,IAAKC,OAAQ,IAAK7K,KAAMS,KAAKmB,MAAM0G,MAAMwC,YACtDC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAChDpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAeC,gBAAgB,QAC/BtI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,QAAQ,OAAOC,OAAO,UAC7BzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOF,QAAQ,SAASC,OAAO,UAC/BzI,EAAAC,EAAAC,cAACyI,EAAA,EAAD,MACA3I,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,MACA5I,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAKL,QAAQ,SAASM,QAAQ,IAAIC,KAAK,qBA3CrBjI,yCC6CvBkI,GAlCdpG,YAAO,WACPC,0BAEG,SAAAmG,IAAc,IAAAzN,EAAA,OAAAiC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsL,IAEVzN,EAAAiC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwL,GAAAnL,KAAAH,QACKI,MAAQ,CACTmL,aAAc,IAJR1N,wEAYd,OACIyE,EAAAC,EAAAC,cAAA,WACDF,EAAAC,EAAAC,cAAA,2CACOF,EAAAC,EAAAC,cAACgJ,GAAA,EAAD,CAAWrB,MAAO,IAAKC,OAAQ,IAAK7K,KAAMS,KAAKmB,MAAM0G,MAAM4D,sBACzDnB,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAC/CpI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,QAAQ,OAAOC,OAAO,UAC7BzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOD,OAAO,UACdzI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAeC,gBAAgB,QAC/BtI,EAAAC,EAAAC,cAACyI,EAAA,EAAD,MACA3I,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,MACA5I,EAAAC,EAAAC,cAACkJ,GAAA,EAAD,CAAM1N,KAAK,WAAW8M,QAAQ,UAAUC,OAAO,QAAQY,UAAW,CAAEhI,EAAG,KACvErB,EAAAC,EAAAC,cAACkJ,GAAA,EAAD,CAAM1N,KAAK,WAAW8M,QAAQ,SAASC,OAAO,qBAxB5B3H,qBC6BnBwI,GAxCd1G,YAAO,WACPC,0BAEG,SAAAyG,IAAc,IAAA/N,EAAA,OAAAiC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4L,IACV/N,EAAAiC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8L,GAAAzL,KAAAH,QACGI,MAAM,GAFCvC,mFAQVmC,KAAKmB,MAAM0G,MAAMzC,iDAOjB,OAHAlG,QAAQC,IAAI,aAAca,KAAKmB,MAAM0G,MAAMxC,YAC3CnG,QAAQC,IAAI,WAAWa,KAAKmB,MAAM0G,MAAMC,UAGpCxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXzC,KAAKmB,MAAM0G,MAAMC,SACnBxF,EAAAC,EAAAC,cAAA,WACExC,KAAKmB,MAAM0G,MAAME,aACjBzF,EAAAC,EAAAC,cAAA,wBACFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAACqJ,GAAD,MACAvJ,EAAAC,EAAAC,cAACsJ,GAAD,QAKD,aA7BQ1I,qBCAf2I,GAFL7G,YAAO,WACPC,0BAEG,SAAA4G,IAAc,IAAAlO,EAAA,OAAAiC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+L,IACVlO,EAAAiC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiM,GAAA5L,KAAAH,QAOFoI,kBAAoB,WAClBvK,EAAKsD,MAAMkH,WAAWxK,EAAKsD,MAAM0G,MAAMS,OAAQ,MATrCzK,EAYd0K,aAAe,SAAC7C,GACZ7H,EAAKyC,SAALR,OAAA+B,EAAA,EAAA/B,CAAA,GACK4F,EAAMhE,OAAO3D,KAAO2H,EAAMhE,OAAOE,SAd5B/D,EAiBdmO,gBAAkB,WAEd9M,QAAQC,IAAI,OAAQtB,EAAKuC,OACrBvC,EAAKuC,MAAMqI,UAAY5K,EAAKuC,MAAMsI,UACtC7J,IAAMe,KAAK,gCAAiC/B,EAAKuC,OAC5CpB,KAAK,SAAAW,GACsB,MAApBA,EAASgJ,QACTzJ,QAAQC,IAAI,WAAYQ,GACzBA,EAASJ,KAAKF,OAEjBxB,EAAKsD,MAAM0G,MAAMgB,aAAa,2BAC9BhL,EAAKsD,MAAM0G,MAAMiB,kBAAmB,EACpCjL,EAAKuK,sBAGGvK,EAAKsD,MAAM0G,MAAMiB,kBAAmB,EACpCjL,EAAKsD,MAAM0G,MAAMgB,aAAe,oBAChChL,EAAKuK,sBAIZlJ,QAAQC,IAAI,WAEhBC,MAAM,SAAAC,GACHH,QAAQC,IAAI,QAAQE,KAG5BxB,EAAKoO,gBAGDpO,EAAKsD,MAAM0G,MAAMgB,aAAa,yBAC9BhL,EAAKsD,MAAM0G,MAAMiB,kBAAiB,EAClCjL,EAAKuK,sBA/CTvK,EAAKuC,MAAQ,CACTqI,SAAU,GACVC,SAAU,IAJJ7K,6EAuDVmC,KAAKM,SAAS,CAAEmI,SAAU,GAAIC,SAAU,+CAGxC,OACIpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAMXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiByG,MAAO,CAAEC,MAAO,SAAW3G,UAAU,MAAMG,KAAMyG,IAASvC,KAAK,OAEhFxE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,WACDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAUzE,KAAK,OAAOM,GAAG,WAAWP,KAAK,WAAWyI,YAAY,WAAW5E,MAAO5B,KAAKI,MAAMqI,SAAU5F,SAAU7C,KAAKuI,iBAExIjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,aAECH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAUzE,KAAK,WAAWM,GAAG,WAAWP,KAAK,WAAWyI,YAAY,WAAW5E,MAAO5B,KAAKI,MAAMsI,SAAU7F,SAAU7C,KAAKuI,gBAJ7I,KAOHjG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBE,QAAS3C,KAAKgM,iBAAiB1J,EAAAC,EAAAC,cAAA,wBACjExC,KAAKmB,MAAM0G,MAAMiB,iBAAkBxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBzC,KAAKmB,MAAM0G,MAAMgB,cAAoB,uCAKhH,OACIvG,EAAAC,EAAAC,cAAA,WACKxC,KAAKkM,0BAzFK9I,qBAgGZkG,OAAayC,ICrFbI,eAfX,SAAAA,IAAe,OAAArM,OAAAC,EAAA,EAAAD,CAAAE,KAAAmM,GAAArM,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqM,GAAAhM,KAAAH,6EAKX,OACIsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC4J,GAAD,cARGhJ,aC2CJiJ,GAlCdnH,YAAO,WACPC,0BAEC,SAAAkH,IAAe,OAAAvM,OAAAC,EAAA,EAAAD,CAAAE,KAAAqM,GAAAvM,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuM,GAAAlM,KAAAH,6EAcN,IAAAnC,EAAAmC,KACP,OACEsC,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,KACAhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAC+J,EAAD,CAAQC,OAAQxM,KAAKmB,MAAM0G,MAAM2E,SACjClK,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,KACjC7J,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAOE,KAAK,UAAUE,OAAQ,kBAAMvK,EAAAC,EAAAC,cAAC4J,GAAD,SACpC9J,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAOE,KAAK,SAASE,OAAQ,kBAAMvK,EAAAC,EAAAC,cAACsK,EAAD,SACnCxK,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAOE,KAAK,QAAQE,OAAQ,kBAAMvK,EAAAC,EAAAC,cAACuK,EAAD,CAAMP,OAAQ3O,EAAKsD,MAAM0G,MAAM2E,OAAQ1E,SAAUjK,EAAKsD,MAAM0G,MAAMC,SAAUxJ,GAAIT,EAAKsD,MAAM0G,MAAMvJ,QACnIgE,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAOE,KAAK,cAAcE,OAAQ,kBAAMvK,EAAAC,EAAAC,cAACwK,GAAD,kBAzB9B5J,qBCHE6J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4JCXAC,GAAa,CAACC,EAAI,MAAOC,EAAI,MAAOC,EAAI,MAAOC,EAAI,MAAOC,EAAI,MAAOC,EAAI,MAAOC,EAAI,MAAOC,EAAI,MAAOC,EAAI,OAAQC,GAAK,MAAOC,GAAK,MAAOC,GAAK,OA+J/IrG,GAAQ,+mBAlFbsG,iBAAmBC,aACZ,kBAAOvQ,EAAKwH,YACZ,SAAA3B,GACQA,EAAQ2D,SACpBxJ,EAAKwQ,kBACLxQ,EAAKyQ,qKA4DRC,kBAAoB,SAACC,GACpB3Q,EAAK4Q,MAAMC,KAAKF,GAChBtP,QAAQC,IAAItB,EAAK4Q,+FA9IjBE,8EAAsB,yCAEtBA,+EAAiB,+CACjBA,+EAAuB,8CACvBA,+EAAsB,sDACtBA,+EAA8B,kDAC9BA,8EAA0B,iDAC1BA,8EAAwB,kDACxBA,8EAAyB,4DACzBA,8EAAmC,iDACnCA,+EAAwB,qDAQxB/I,0FAAuB,WAEvB1G,QAAQC,IAAI,iBACZN,IAAMC,IAAN,YAAAC,OAFa,IAGXC,KAAK,SAAAC,GAEL+C,EAAKqD,WAAapG,EAAOM,KAAK,GAAGkE,OACjCvE,QAAQC,IAAI,mBAAoB6C,EAAKqD,YACrCrD,EAAKwD,WAAY,+CAInBI,0FAAgB,WAChB1G,QAAQC,IAAI,SACZyP,EAAK9G,UAAW,6CAKhBlC,0FAAgB,WAChBiJ,EAAK/F,kBAAoB+F,EAAK/F,qEAG9BlD,0FAAyB,WACzB1G,QAAQC,IAAI,eAAgB2P,EAAKzJ,YACjC,IAAI0J,EAAiB,GAAIC,EAAa,GAEtCF,EAAKzJ,WAAW4J,QAAQ,SAAUC,EAAMjM,EAAGkM,GAE1C,GADAjQ,QAAQC,IAAI,QACM,IAAd+P,EAAKlR,KAAY,CACpB,IAAIoR,EAAQJ,EAAWK,QAAQH,EAAKtO,SAAS7C,MAC7C,IAAe,IAAXqR,EAAc,CACjB,IAAIE,EAAeJ,EAAKtO,SAAS7C,KACjCmB,QAAQC,IAAI,gBAAiBmQ,EAAcJ,EAAK7O,QAChD0O,EAAeL,KAAK,CAAE3Q,KAAMuR,EAAcjP,OAAQ6O,EAAK7O,SACvD2O,EAAWN,KAAKY,QAGhBP,EAAeK,GAAO/O,QAAU6O,EAAK7O,UAaxCnB,QAAQC,IAAI,YAAa4P,EAAgB,SAzB5B,IA0BbD,EAAKzE,YAAc0E,iDAcnBnJ,0FAAoB,kBAClBtD,EAAAC,EAAAC,cAAA,MAAIlE,GAAG,WACLgE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAMP,GAAG,SAAQ3G,EAAAC,EAAAC,cAAA,yBACrBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAMP,GAAG,eAAc3G,EAAAC,EAAAC,cAAA,2BAE9BF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAMP,GAAG,KAAI3G,EAAAC,EAAAC,cAAA,QAAMG,QAAS4M,EAAK/C,QAApB,kEAI1C5G,0FAA0B,WAG1B,IAAIrG,EAAK,CAACjB,GAAGkR,EAAKrO,MAAM0G,MAAMvJ,GAAImR,WAAYD,EAAKrO,MAAM0G,MAAM4H,YAC/D9R,EAAWe,YAAY,aAAca,2DAGrCqG,0FAA6B,WAKvB,IAJN,IAAIrG,EAAOmQ,EAAKrK,WACNsK,EAAc,GAAIC,EAAc,GAAIC,EAAoB,GAExDjG,GADc,IAAI1H,MACQ2H,cACrB5G,EAAI,EAAGA,EAAI1D,EAAK8H,OAAQpE,IAAK,CAClC,IAAI6M,EAAa,IAAI5N,KAAK3C,EAAK0D,GAAGjC,MAClC,GAAI8O,EAAWjG,gBAAkBD,EAAa,CACtD,IAAImG,EAAWD,EAAW/F,WAC1B7K,QAAQC,IAAI,YAAYI,EAAK0D,GAAGjF,MACC,IAAjBuB,EAAK0D,GAAGjF,KACR4R,EAAYG,QAAuCC,IAA1BJ,EAAYG,GACjCH,EAAYG,GAAYxQ,EAAK0D,GAAL,OAAoB1D,EAAK0D,GAAL,OAIhD4M,EAAkBE,QAA6CC,IAAhCH,EAAkBE,GAC7CF,EAAkBE,GAAYxQ,EAAK0D,GAAL,OAAoB1D,EAAK0D,GAAL,QAIlE/D,QAAQC,IAAI,cAAcyQ,GAC1B1Q,QAAQC,IAAI,oBAAoB0Q,GAChC,IAAK,IAAII,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,IACIhR,EAAS,CACTlB,KAFcuP,GAAW2C,GAGzBC,QAAWN,EAAYK,GACvBE,OAAUN,EAAkBI,IAEhCN,EAAYjB,KAAKzP,GAEzBC,QAAQC,IAAI,cAAewQ,GAC1BD,EAAKjE,sBAAsBkE,sDAY9B/J,0FAAyB,WACXwK,EAAKnP,SAClB,OAAOpC,IAAMC,IAAN,+CAAAC,OAtJA,mCAsJA,UAAAA,OAAqEqR,EAAKC,MAA1E,QAAAtR,OAAsFqR,EAAKE,IAA3F,YAAAvR,OAAyGqR,EAAKG,UAClHvR,KAAK,SAAAC,GACPC,QAAQC,IAAIF,KAEVG,MAAM,SAAUC,GAClBH,QAAQC,IAAI,6CAA8CE,aAM9D6N,OAAOrF,MAAQA,GACAA,UC/JfqF,OAAOrF,MAAQA,GAIf2I,IAAS3D,OAAOvK,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAU5I,MAAOA,IACjBvF,EAAAC,EAAAC,cAACkO,GAAD,OACSC,SAASC,eAAe,SF8G3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/R,KAAK,SAAAoN,GACjCA,EAAa4E","file":"static/js/main.e9d42230.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/money-loader.509e82cc.gif\";","import axios from 'axios'\nimport { observer, inject } from 'mobx-react';\n// @inject(\"store\")\n// @observer \nclass AxiosFuncClass {\n  \n  getRequests(link) {\n    return axios.get(`/${link}`)\n      .then(result => {\n        console.log(result);\n      })\n      .catch(function (error) {\n        console.log(\"Sorry, something wrong. Get request failed\", error);\n      });\n\n  }\n\n  deleteRequests(link, id) {\n    //link = \"record\";\n    //id = 15;\n    console.log(link, id);\n    return axios.delete(`/delete/${link}/${id}`)\n      .then(result => {\n        console.log(\"success\", result);\n      })\n      .catch(function (error) {\n        console.log(\"Sorry, something wrong. delete request failed\", error);\n      });\n  }\n\n  putRequests(link, data) {\n    return axios.put(`/${link}`, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }).then(response => {\n      console.log(\"DB Updated\", response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  postRequests(link, data) {\n    // let data = {name:\"business\", type:0, Icon:\"faGlobe\"};\n    return axios.post(`/${link}`, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }).then(response => {\n      console.log(\"successful post-request\", response);\n    }).catch(function (error) {\n      console.log(\"Sorry, something wrong. New data hasn't been added.\", error);\n    });\n  }\n\n  //------ Functions to use externally\n\n  getDataFromDB() {\n    console.log('aaa')\n    let userId = 1;//this.props.id;\n    return axios.get(`/getData/${userId}`)\n  }\n\n  getCategoriesFromDB() {\n    //return this.getRequests(\"categories\");\n    return axios.get(`/categories`)\n  }\n\n  addCategory = () => {\n    this.postRequests(\"category\", { name: \"business\", type: 0, Icon: \"faGlobe\" });\n  }\n  addRecord = (newRecord) => {\n     /* newRecord: { userId: 1, date: \"2018-08-30\",type: 1,categoryId: 1,paymentMethod: 0,amount: 100,currency: 'USD',comment: \"nice\"}*/\n    let userId = 1;\n    newRecord.userId = 1;\n    return this.postRequests(\"record\", newRecord);\n  }\n\n  deleteRecord = (id) => {\n    //let id = 10;\n    return this.deleteRequests(\"record\", id);\n  }\n  deleteCategory = () => {\n    let id = 8;\n    this.deleteRequests(\"category\", id);\n  }\n  editCategories = () => {\n    this.putRequests(\"category\", { id: 13, name: \"sport\", type: 0, Icon: \"faSport\" });\n  }\n  editRecord = (newRecord) => {\n    let userId = 1;\n    newRecord.userId = 1;\n    return this.putRequests(\"record\",newRecord);\n  }\n}\n\nconst AxiosFuncs = new AxiosFuncClass();\nexport default AxiosFuncs;\n\n\n","import React, { Component } from 'react';\nimport './AddForm.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AxiosFuncs from './AxiosFuncs';\nimport moment, { updateLocale } from 'moment';\n\nclass AddForm extends Component {\n  constructor() {\n    super()\n    this.categoriesExpense = [];\n    this.categoriesIncome = [];\n    this.currencies = [\"NIS\", \"USD\", \"EUR\"]\n    this.state = {\n      date: \"\",\n      type: \"Expense\",\n      category: \"\",\n      paymentMethod: \"Cash\",\n      amount: 0,\n      currency: \"NIS\",\n      comment: \"\",\n      categoriesExpense: [],\n      categoriesIncome: [],\n      isRed: \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.getCategories();\n  }\n\n  getCategories() {\n    AxiosFuncs.getCategoriesFromDB()\n      .then(result => {\n        let categoriesExpense = result.data.filter(d => d.type === 0)\n        let categoriesIncome = result.data.filter(d => d.type === 1)\n        let date = new Date();\n        date = moment(date).format(\"YYYY-MM-DD\")\n        let category = categoriesExpense[0].name\n        this.setState({ categoriesExpense, categoriesIncome, date, category })\n      })\n      .catch(err => {console.log(err); alert(\"Problem with DB\")})\n  }\n\n  addRecord = () => {\n    /*console.log(this.state);\n    console.log(this.state.categoriesExpense);*/\n    if (this.state.amount <= 0) {\n      this.setState({isRed: \"red\"})\n      return;\n    }\n    let category = (this.state.type === \"Expense\") ?\n      this.state.categoriesExpense.filter(d => d.name === this.state.category) :\n      this.state.categoriesIncome.filter(d => d.name === this.state.category)\n    let categoryId = category[0].id\n    let paymentMethod = this.state.paymentMethod === \"Cash\" ? 0 : 1;\n    let type = this.state.type === \"Expense\" ? 0 : 1;\n    let { date, amount, currency, comment } = this.state;\n    let newRecord = { date, type, categoryId, paymentMethod, amount, currency, comment }\n    AxiosFuncs.addRecord(newRecord).then(result => {\n      this.props.closeAddForm();\n      this.props.getRecords();\n    }\n    ).catch(err => console.log(err));\n  }\n\n  inputChange = (e) => {\n    if (e.target.name === \"type\") {\n      let category = \"\";\n      category = (e.target.value === \"Income\") ? this.state.categoriesIncome[0].name :\n                                                 this.state.categoriesExpense[0].name\n      this.setState({ [e.target.name]: e.target.value, category}); \n      return;                                  \n    }\n    this.setState({ [e.target.name]: e.target.value, isRed: \"\"});\n  }\n\n  render() {\n    return (\n      <div className=\"add-form\">\n        <div className=\"close-button\"><FontAwesomeIcon onClick={this.props.closeAddForm} icon=\"window-close\" /></div>\n        <div>ADD NEW</div>\n        <div className=\"add-form-input\">\n\n          <div className=\"one-column1\" onChange={this.inputChange} name=\"type\">\n            <div> Expense <input type=\"radio\" checked={this.state.type === \"Expense\"} onChange={this.inputChange} value=\"Expense\" name=\"type\" /> </div><span> </span>\n            <div> Income <input type=\"radio\" checked={this.state.type === \"Income\"} onChange={this.inputChange} value=\"Income\" name=\"type\" /> </div>\n          </div>\n          <div className=\"one-column1\" onChange={this.inputChange} name=\"paymentMethod\">\n            <div> Cash <input type=\"radio\" checked={this.state.paymentMethod === \"Cash\"} onChange={this.inputChange} value=\"Cash\" name=\"paymentMethod\" /> </div><span> </span>\n            <div> Card <input type=\"radio\" checked={this.state.paymentMethod === \"Card\"} onChange={this.inputChange} value=\"Card\" name=\"paymentMethod\" /> </div>\n          </div>\n\n          <div> Date:</div><div> <input name=\"date\" type=\"date\" value={this.state.date} onChange={this.inputChange} /></div>\n\n          <div> Category: </div>\n          <div className=\"sel\"> <select name=\"category\" value={this.state.category} onChange={this.inputChange} >\n            {this.state.type === \"Expense\" ? this.state.categoriesExpense.map((cat, i) =>\n              <option key={i} value={cat.name}>{cat.name}</option>\n            ) : this.state.categoriesIncome.map((cat, i) =>\n              <option key={i} value={cat.name}>{cat.name}</option>)\n            }\n          </select></div>\n\n          <div> Amount</div><div className={this.state.isRed}> <input type=\"number\" name=\"amount\" value={this.state.amount} onChange={this.inputChange} /> </div>\n\n          <div> Currency: </div>\n          <div className=\"sel\"> <select name=\"currency\" value={this.state.currency} onChange={this.inputChange} >\n            {this.currencies.map((c, i) =>\n              <option key={i} value={c}>{c}</option>\n            )};\n          </select></div>\n\n          <div> Comment</div><div> <input type=\"text\" name=\"comment\" value={this.state.comment} onChange={this.inputChange} /> </div>\n        </div>\n        <div>\n          <button onClick={this.addRecord}>Send</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddForm;\n\n","import React, { Component } from 'react';\nimport './AddForm.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AxiosFuncs from './AxiosFuncs';\nimport moment/*, { updateLocale } */ from 'moment';\n\nclass EditForm extends Component {\n  constructor() {\n    super()\n    this.categoriesExpense = [];\n    this.categoriesIncome = [];\n    this.currencies = [\"NIS\", \"USD\", \"EUR\"];\n    this.state = {\n      date: \"\",\n      type: \"\",\n      category: \"\",\n      paymentMethod: \"\",\n      amount: \"\",\n      currency: \"\",\n      comment: \"\",\n      categoriesExpense: [],\n      categoriesIncome: []\n    }\n  }\n\n  componentDidMount() {\n    this.getCategories();\n    let id = this.props.recordIdToEdit;\n    let record = this.props.records.filter(r => r.id === id)[0];\n    let {date, type, category, paymentMethodId, amount, currency, comment} = record;\n    type = type === 0 ? \"Expense\" : \"Income\";\n    category = category.name;\n    let paymentMethod = paymentMethodId === 0 ? \"Cash\" : \"Card\";\n    console.log(\"comp did mount\");\n    console.log(category);\n    this.setState({date, type, category, paymentMethod, amount, currency, comment} );\n  }\n\n  getCategories() {\n    AxiosFuncs.getCategoriesFromDB()\n      .then(result => {\n        let categoriesExpense = result.data.filter(d => d.type === 0)\n        let categoriesIncome = result.data.filter(d => d.type === 1)\n        let date = new Date();\n        date = moment(date).format(\"YYYY-MM-DD\")\n        let category = categoriesExpense[0].name\n        this.setState({ categoriesExpense, categoriesIncome, date, category })\n      })\n      .catch(err => console.log(err))\n  }\n\n  editRecord = () => {\n    console.log(this.state)\n    let category = (this.state.type === \"Expense\") ?\n      this.state.categoriesExpense.filter(d => d.name === this.state.category) :\n      this.state.categoriesIncome.filter(d => d.name === this.state.category)\n    let categoryId = category[0].id\n    let paymentMethod = this.state.paymentMethod === \"Cash\" ? 0 : 1;\n    let type = this.state.type === \"Expense\" ? 0 : 1;\n    let { date, amount, currency, comment } = this.state;\n    let id = this.props.recordIdToEdit;\n    let newRecord = { id, date, type, categoryId, paymentMethod, amount, currency, comment }\n    AxiosFuncs.editRecord(newRecord).then(result => {\n      this.props.closeEditForm();\n      this.props.getRecords();\n    }\n    ).catch(err => console.log(err));\n  }\n\n  inputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value});\n  }\n\n  inputChangeType = (e) => {\n    let category = \"\";\n    category = (e.target.value === \"Income\") ? this.state.categoriesIncome[0].name :\n                                                 this.state.categoriesExpense[0].name\n    console.log(category)\n    this.setState({ [e.target.name]: e.target.value, category } ); \n  }\n\n  render() {\n    return (\n      <div className=\"add-form\">\n        <div className=\"close-button\"><FontAwesomeIcon onClick={this.props.closeEditForm} icon=\"window-close\" /></div>\n        <div>EDIT</div>\n        <div className=\"add-form-input\">\n          <div className=\"one-column1\" onChange={this.inputChangeType} name=\"type\">\n            <div> Expense <input type=\"radio\" checked={this.state.type === \"Expense\"} onChange={this.inputChangeType} value=\"Expense\" name=\"type\" /> </div><span> </span>\n            <div> Income <input type=\"radio\" checked={this.state.type === \"Income\"} onChange={this.inputChangeType} value=\"Income\" name=\"type\" /> </div>\n          </div>\n\n          <div className=\"one-column1\" onChange={this.inputChange} name=\"paymentMethod\">\n            <div> Cash <input type=\"radio\" checked={this.state.paymentMethod === \"Cash\"} onChange={this.inputChange} value=\"Cash\" name=\"paymentMethod\" /> </div><span> </span>\n            <div> Card <input type=\"radio\" checked={this.state.paymentMethod === \"Card\"} onChange={this.inputChange} value=\"Card\" name=\"paymentMethod\" /> </div>\n          </div>\n\n          <div> Date:</div><div> <input name=\"date\" type=\"date\" value={this.state.date} onChange={this.inputChange} /></div>\n\n          <div> Category: </div>\n          <div className=\"sel\"> <select name=\"category\" value={this.state.category} onChange={this.inputChange} >\n            {this.state.type === \"Expense\" ? this.state.categoriesExpense.map((cat, i) =>\n              <option key={i} value={cat.name}>{cat.name}</option>\n            ) : this.state.categoriesIncome.map((cat, i) =>\n              <option key={i} value={cat.name}>{cat.name}</option>)\n            }\n          </select></div>\n\n          <div> Amount</div><div> <input type=\"number\" name=\"amount\" value={this.state.amount} onChange={this.inputChange} /></div>\n\n          <div> Currency: </div>\n          <div className=\"sel\"> <select name=\"currency\" value={this.state.currency} onChange={this.inputChange} >\n            {this.currencies.map((c, i) =>\n              <option key={i} value={c}>{c}</option>\n            )};\n          </select></div>\n\n          <div> Comment</div><div> <input type=\"text\" name=\"comment\" value={this.state.comment} onChange={this.inputChange} /> </div>\n        </div>\n        <div>\n          <button onClick={this.editRecord}>Send</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EditForm;\n\n","import React, { Component } from 'react';\nimport './DeleteForm.css';\nimport AxiosFuncs from './AxiosFuncs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nclass DeleteForm extends Component {\n  deleteRecord = () => {\n    AxiosFuncs.deleteRecord(this.props.recordIdToDelete).then( res => {\n      this.props.closeDeleteForm();\n      this.props.getRecords();\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"delete-form\">\n        <div className=\"close-button\"><FontAwesomeIcon onClick={this.props.closeDeleteForm} icon=\"window-close\" /></div>\n        <div>Are you sure you want to delete this record? </div>\n        <div className=\"div-button\">\n          <button onClick={this.deleteRecord}>YES</button>\n          <span> </span>\n          <button onClick={this.props.closeDeleteForm}>NO</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteForm;\n\n","import React, { Component } from 'react';\n\nimport moment, { updateLocale } from 'moment';\nimport AxiosFuncs from './AxiosFuncs';\nimport AddForm from './AddForm';\nimport EditForm from './EditForm';\nimport DeleteForm from './DeleteForm';\nimport './Main.css';\nimport { DATA } from './init-data';\nimport { observer, inject } from 'mobx-react';\nimport loader from '../img/money-loader.gif';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faAngleLeft, faAngleRight, faCheck, faWindowClose, faPlus, faMinus, faMoneyBillAlt, faCreditCard, faTrashAlt, faShekelSign, faDollarSign, faEuroSign, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nlibrary.add(faAngleLeft, faAngleRight, faCheck, faWindowClose, faPlus, faMinus, faMoneyBillAlt, faCreditCard, faTrashAlt, faShekelSign, faDollarSign, faEuroSign, faEdit);\nconst ITEMSPERPAGE = 10;\n@inject(\"store\")\n@observer \nclass Main extends Component {\n  constructor() {\n    super()\n    this.fields = [\"Date\", \"Type\", \"Category\", \"Method\", \"Amount\", \"Currency\", \"Comments\"]\n    this.currencyIcon = { \"NIS\": \"shekel-sign\", \"EUR\": \"euro-sign\", \"USD\": \"dollar-sign\" }\n    this.state = {\n      isLoading: true,\n      allRecords: \"\",\n      textTosearch: \"\",\n      startDate: \"2018-01-01\",\n      endDate: \"2018-10-29\",\n      currentPage: 1,\n      showAddForm: false,\n      recordIdToEdit: -1, // if -1 nothing to edit,\n      recordIdToDelete: -1 // if -1 nothing to delete,\n     \n    }\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  getRecords =() => {\n    AxiosFuncs.getDataFromDB().then(result => {\n      let allRecords = result.data[0].record\n      allRecords.sort((a, b) => (new Date(b.date) - new Date(a.date)));\n      this.setState({ allRecords, isLoading: false });\n    }).catch(function (error) {\n      console.log(error);\n    })\n  }\n\n  changeInput = (event) => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  changePage = (action) => {\n    let currentPage = this.state.currentPage\n    action === \"plus\" ? currentPage++ : currentPage--\n    this.setState({ currentPage })\n    this.getCurrentRecords();\n  }\n  \n\n  /******Show Components *****/\n  showLoader = () => this.state.isLoading ? <div className=\"loading\"> <img src={loader} /></div> : null\n\n\n  showHeader = () => <div id=\"grid-header\">\n    {this.fields.map((f, i) => <div key={i}>{f}</div>)}\n  </div>\n\n  showSearchBar = () => <div className=\"search-bar\">\n    From: <input type=\"date\" name=\"startDate\" value={this.state.startDate} onChange={this.changeInput}></input><span> </span>\n    To: <input type=\"date\" name=\"endDate\" value={this.state.endDate} onChange={this.changeInput}></input><span> </span>\n    <input type=\"text\"  placeholder=\"Search by comment\" name=\"textTosearch\" value={this.state.textTosearch} onChange={this.changeInput}></input>\n  </div>\n\n  showPagination = (startIndex, endIndex, lastPage) =>\n    <div className=\"pagination\">\n      {this.state.currentPage !== 1 ? <FontAwesomeIcon onClick={(e) => this.changePage(\"minus\")} icon=\"angle-left\" size=\"1x\" /> : null}\n      <span> </span> {startIndex} - {endIndex} <span> </span>\n      {this.state.currentPage !== lastPage ? <FontAwesomeIcon onClick={() => this.changePage(\"plus\")} icon=\"angle-right\" size=\"1x\" /> : null}\n    </div>\n\n  showAddForm = () => {\n    this.setState({ showAddForm: true })\n  }\n\n  closeAddForm = () => this.setState({ showAddForm: false })\n  closeEditForm = () => this.setState({ recordIdToEdit: -1 })\n  closeDeleteForm = () => this.setState({ recordIdToDelete: -1 })\n\n  /***** Get Record Components */\n  getCurrentRecords = () => {\n    let records = [...this.state.allRecords]\n    let startIndex = (this.state.currentPage - 1) * ITEMSPERPAGE + 1\n    let endIndex = startIndex + ITEMSPERPAGE - 1\n    records = records.filter(c =>\n      (c[\"comment\"].toLowerCase().includes(this.state.textTosearch.toLowerCase()))\n      && (c.date >= this.state.startDate || this.state.startDate === \"\")\n      && (c.date <= this.state.endDate || this.state.endDate === \"\")\n    )\n    let lastPage = Math.ceil(records.length / ITEMSPERPAGE)\n    records = records.slice(startIndex - 1, endIndex )\n    return { records, startIndex, endIndex, lastPage }\n  }\n\n  renderRecords = (records) =>\n    <div id=\"grid-container\">\n      {this.showHeader()}\n      {records.map(c => {\n        let date = moment(c.date).format(\"MM/DD/YY\")\n        return (\n          <div className=\"item\" key={c.id}>\n            <div>{date}</div>\n            <div>{ c.type ? <FontAwesomeIcon icon=\"plus\" /> : <FontAwesomeIcon icon=\"minus\" />}</div>\n            <div>{c.category.name}</div>\n            <div>{c.paymentMethod.name === \"cash\" ? <FontAwesomeIcon icon=\"money-bill-alt\" /> : <FontAwesomeIcon icon=\"credit-card\" />} </div>\n            <div>{c.amount}</div>\n            <div><FontAwesomeIcon icon={this.currencyIcon[c.currency]} /></div>\n            <div>{c.comment}</div>\n            <div>\n              <FontAwesomeIcon icon=\"trash-alt\" onClick={() => this.deleteRecord(c.id)} />\n              <span> </span>\n              <FontAwesomeIcon icon=\"edit\" onClick={() => this.editRecord(c.id)} />\n            </div>\n          </div>)\n      })}\n    </div>\n\n  editRecord = (id) => {\n    this.setState({ recordIdToEdit: id })\n  }\n\n  deleteRecord = (id) => {\n    this.setState({ recordIdToDelete: id })\n  }\n\n  render() {\n    let { records, startIndex, endIndex, lastPage } = this.getCurrentRecords()\n    return (\n      \n      <div>\n         {(this.props.store.loggedIn) ?  (\n        <div><div className=\"App\">\n          {this.props.store.showNavBar()}\n          <div className=\"container\">\n            <div className=\"row-bar\">\n              {this.showSearchBar()}\n              {this.showPagination(startIndex, endIndex, lastPage)}\n            </div>\n            {this.renderRecords(records)}\n            {this.state.showAddForm ? <AddForm closeAddForm={this.closeAddForm} getRecords={this.getRecords}/> : null}\n            {(this.state.recordIdToEdit !== -1) ? <EditForm closeEditForm={this.closeEditForm} recordIdToEdit={this.state.recordIdToEdit} records = {records} getRecords={this.getRecords}/> : null}\n            {(this.state.recordIdToDelete !== -1) ? <DeleteForm closeDeleteForm={this.closeDeleteForm} recordIdToDelete={this.state.recordIdToDelete} getRecords={this.getRecords}/> : null}\n            {this.showLoader()}\n          </div>\n        </div>\n        <div className=\"dot\"> <FontAwesomeIcon size='6x' onClick={() => this.showAddForm()} icon=\"plus\" /></div>\n      </div>)\n      :null}\n      </div>\n    )\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ReactTimeout from 'react-timeout'\nimport { faGlobe, faUsdCircle} from '@fortawesome/free-solid-svg-icons'\nimport './home.css';\nimport { observer, inject } from 'mobx-react';\n@inject(\"store\")\n@observer \nclass LoginForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            redirectTo: null,\n            username: '',\n            password:''\n        }\n    }\n    _showErrorMessage = () => {\n        this.props.setTimeout(this.props.store.toggle, 5000) // call the `toggle` function after 5000ms\n      }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    clear(){\n        this.setState({username:'',password:''})\n    }\n\n    logIn = () => {\n        //Send data to server via ajax\n        // event.preventDefault()\n        if (this.state.username && this.state.password){\n        axios\n            .post('/logIn', {\n                username: this.state.username,\n                password: this.state.password\n            })\n            .then(response => { \n                console.log(\"login\",response);\n                if (response.status === 200) {\n                 \n                   if(response.data!==false){\n                        this.props.store.loggedIn = true;\n                        this.props.store.id = response.data.id;\n                        this.props.store.username = response.data.name;\n                    this.setState({\n                        redirectTo: '/main'\n                    })\n                }\n                else{\n                    // alert(\"wrong login or password\");\n                    this.props.store.errorMessage=\"wrong login or password\";\n                    this.props.store.showErrorMessage = true; \n                    this._showErrorMessage();\n                    this.clear()\n                }\n                }\n            })\n        }\n        else {\n            this.props.store.errorMessage=\"Type name and password\";\n            this.props.store.showErrorMessage=true;\n            this._showErrorMessage();\n        }\n            // .catch(error => {\n            //     console.log('login error: ')\n            //     console.log(error);\n            // })\n    }\n\n    render() {\n        //redirect by state\n        if (this.state.redirectTo) {\n            return <Redirect to={{ pathname: this.state.redirectTo }} />\n        } else {\n            return (\n                <div className=\"reg-box\">\n                {/* <form onSubmit={this.handleSubmit}> */}\n                {/* <div className=\"row\">\n                    <div className=\"col-6\">col</div>\n                    <div className=\"col-6\">col</div>\n                </div> */}\n                    \n                <FontAwesomeIcon style={{ color: \"white\" }} className=\"fas\" icon={faGlobe} size=\"6x\" />\n               \n                <h3 className=\"text-center\">Log In</h3>\n               <div className=\"row log\">\n               <div className=\"col-4 \"> Name:</div>\n               <div className=\"col-8\">\n               <input type=\"text\" className=\"inp-reg\" id=\"usernameLogIn\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange} />\n               </div></div>\n               <div className=\"row pas\">\n               <div className=\"col-4 \">\n                Password:</div>\n                <div className=\"col-8\">\n                <input type=\"password\" className=\"inp-reg\" id=\"passwordLogIn\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\n                </div> </div>\n                \n            <button className=\"button button-reg\" onClick={this.logIn}><span>Log In</span></button>\n            {(this.props.store.showErrorMessage)?<div className=\"error-message\">{this.props.store.errorMessage}</div>:null}\n          {/* <input type=\"submit\" className=\"button button-reg\" value=\"Log In\" /> */}\n           {/* </form>    */}\n        </div>\n\n        )\n        }}\n}\n\nexport default ReactTimeout(LoginForm)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { observer, inject } from 'mobx-react';\nimport '../App.css';\nimport axios from 'axios'\n@inject(\"store\")\n@observer\nclass Navbar extends Component {  \n    render() {\n        // const loggedIn = this.props.loggedIn;\n        //Conditional render of nav bar\n        return (\n            <header>\n                {!this.props.store.loggedIn ? (\n                        <div>\n                            {/* <Link to=\"/\" className=\"btn btn-link text-secondary\">\n                                <span className=\"text-secondary\">home</span>\n                            </Link>\n                            &nbsp;|&nbsp; */}\n                            <Link to=\"/login\" className=\"btn btn-link text-secondary\">\n                                <span className=\"text-white\">login</span>\n                            </Link>\n                            &nbsp;|&nbsp;\n                            <Link to=\"/signup\" className=\"btn btn-link text-secondary\">\n                                <span className=\"text-white\">signup</span>\n                            </Link>\n                        </div>)\n                    \n                :null}\n             </header>\n        );\n\n    }\n}\n\nexport default Navbar","import React, { Component } from 'react'\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport { observer, inject } from 'mobx-react';\r\n@inject(\"store\")\r\n@observer\r\nclass ChartCategoriesExpenses extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            year: 2018,\r\n            month: 0\r\n            // dataExpense: [],\r\n            // dataIncome: [],\r\n            // loading: true\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getDate();\r\n      }\r\n      \r\n      getDate = () => {\r\n        let currentDate = new Date();\r\n        let currentYear = currentDate.getFullYear(),\r\n            currentMonth = currentDate.getMonth();\r\n        this.setState({year:currentYear, month:currentMonth});\r\n      }\r\n    \r\n    inputChange = (e) => {\r\n        console.log(e.target.name)\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* {this.getOptions}    */}\r\n                {/* <select name=\"time\" value={this.state.year} onChange={this.inputChange} >\r\n                        <option key=\"21\" value={this.state.year}>year</option>\r\n                        <option key=\"22\" value={this.state.month}>{this.state.year}</option>\r\n                    </select> */}\r\n                   <h3>Expenses per Year</h3> \r\n                <BarChart width={700} height={300} data={this.props.store.dataExpense}\r\n                    margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" stroke=\"white\"/>\r\n                    <YAxis dataKey=\"amount\" stroke=\"white\"/>\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"amount\" stackId=\"a\" fill=\"#8884d8\" />\r\n                    {/* <Bar dataKey=\"male\" stackId=\"a\" fill=\"#82ca9d\" /> */}\r\n                    {/* <Bar dataKey=\"uv\" fill=\"#ffc658\" /> */}\r\n                </BarChart>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ChartCategoriesExpenses;\r\n","import React, { Component } from 'react'\r\nimport { render } from 'react-dom'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport { observer, inject } from 'mobx-react';\r\nconst monthNames = {'1':\"Jan\", '2':\"Feb\", '3':\"Mar\", '4':\"Apr\", '5':\"May\", '6':\"Jun\", '7':\"Jul\", '8':\"Aug\", '9':\"Sept\", '10':\"Oct\", '11':\"Nov\", '12':\"Dec\"};\r\n// const month=Object.keys(monthNames);\r\n// const month=['1','2','3','4','5','6','7','8','9','10','11','12'];\r\n// const data = [\r\n//     { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n//     { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n//     { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n//     { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n//     { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n//     { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n//     { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n// ];\r\n@inject(\"store\")\r\n@observer\r\nclass ChartYearCategories extends Component {\r\n    constructor() {\r\n\r\n        super()\r\n        this.state = {\r\n            dataForChart: []\r\n        }\r\n    }\r\n    // componentDidMount() {\r\n    //   }\r\n    \r\nrender() {\r\n\r\n    return (\r\n        <div>\r\n       <h3> Expenses And Income per Year</h3>\r\n              <LineChart width={600} height={300} data={this.props.store.dataExpenseIncomeYear}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <XAxis dataKey=\"name\" stroke=\"white\"/>\r\n                <YAxis stroke=\"white\"/>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"expense\" stroke=\"white\" activeDot={{ r: 8 }} />\r\n                <Line type=\"monotone\" dataKey=\"income\" stroke=\"#82ca9d\" />\r\n            </LineChart>\r\n            {/* <button type=\"button\" onClick={this.createDaysData}>DataChart</button> */}\r\n        </div>\r\n    )\r\n\r\n}\r\n}\r\nexport default ChartYearCategories;\r\n","import React, { Component } from 'react'\r\nimport { observer, inject } from 'mobx-react';\r\nimport LogIn from './login'\r\nimport './charts/charts.css';\r\nimport ChartCategoriesExpenses from './chart3'\r\nimport ChartYearCategories from './ChartYearCategories'\r\nimport axios from 'axios'\r\n@inject(\"store\")\r\n@observer\r\nclass Charts extends Component {\r\n    constructor() {\r\n        super()\r\n      this.state={\r\n            // allRecords:[]\r\n        }\r\n    } \r\n   \r\n    componentDidMount() {\r\n        this.props.store.getDataFromDB();\r\n      }\r\n      \r\n    render() { \r\n        console.log('this state', this.props.store.allRecords);\r\n        console.log(\"loggedIn\",this.props.store.loggedIn);\r\n        \r\n        return (\r\n            <div className=\"App\">\r\n              {(this.props.store.loggedIn) ?  (\r\n              <div >\r\n               {this.props.store.showNavBar()}\r\n                <h1>Statistics</h1>\r\n              <div className=\"charts-box\">\r\n              <ChartCategoriesExpenses  />\r\n              <ChartYearCategories />\r\n             </div>\r\n             </div>\r\n               )\r\n             : \r\n             null\r\n              }           \r\n        \r\n             </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Charts;\r\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGlobe, faUsdCircle} from '@fortawesome/free-solid-svg-icons'\nimport { observer, inject } from 'mobx-react';\nimport ReactTimeout from 'react-timeout'\nimport axios from 'axios';\nimport './home.css';\n@inject(\"store\")\n@observer\nclass Registration extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n      _showErrorMessage = () => {\n        this.props.setTimeout(this.props.store.toggle, 5000) // call the `toggle` function after 5000ms\n      }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    sendNewUserData = () => {\n        \n        console.log(\"send\", this.state);\n        if (this.state.username && this.state.password){\n        axios.post('http://localhost:5001/addUser', this.state)\n            .then(response => {\n                if (response.status === 200) {\n                    console.log(\"response\", response);\n                if(response.data.error){\n                \n                this.props.store.errorMessage=\"This name already exists\";\n                this.props.store.showErrorMessage = true; \n                this._showErrorMessage();\n                }\n                    else {\n                        this.props.store.showErrorMessage = true;\n                        this.props.store.errorMessage = \"New login created\";\n                        this._showErrorMessage();\n                    }\n                \n            }\n            else console.log(\"error\");\n        })\n            .catch(error => {\n                console.log(\"error\",error);\n                \n            })\n        this.clearInputs();\n        }\n        else {\n            this.props.store.errorMessage=\"Type name and password\";\n            this.props.store.showErrorMessage=true;\n            this._showErrorMessage();\n        }\n    }\n\n\n    clearInputs() {\n        this.setState({ username: \"\", password: \"\" });\n    }\n    getRegistration() {\n        return (\n            <div className=\"reg-box\">\n                {/* <div className=\"row\">\n                    <div className=\"col-6\">col</div>\n                    <div className=\"col-6\">col</div>\n                </div> */}\n\n                <FontAwesomeIcon style={{ color: \"white\" }} className=\"fas\" icon={faGlobe} size=\"6x\" />\n               \n                <h3 className=\"text-center\">Sign Up</h3>\n               <div className=\"row log\">\n               <div className=\"col-4 \"> Name:</div>\n               <div className=\"col-8\">\n                <input className=\"inp-reg\" type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange} />\n               </div></div>\n               <div className=\"row pas\">\n               <div className=\"col-4 \">\n                Password:</div>\n                <div className=\"col-8\">\n                 <input className=\"inp-reg\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\n               </div> </div>\n               \n            <button className=\"button button-reg\" onClick={this.sendNewUserData}><span>Sign Up</span></button>\n              {(this.props.store.showErrorMessage)?<div className=\"error-message\">{this.props.store.errorMessage}</div>:null}\n            </div>)\n    }\n\n    render() {\n        return (\n            <div>\n                {this.getRegistration()}\n            </div>\n        )\n\n    }\n}\n\nexport default ReactTimeout(Registration)\n","import React, { Component } from 'react'\nimport Charts from './charts';\nimport Registration from './registration'\n\nclass Home extends Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <div className=\"home-box\">\n                <Registration />\n                {/* <Charts /> */}\n            </div>\n        )\n\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n// import { Redirect } from 'react-router-dom'\nimport { observer, inject } from 'mobx-react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Route, BrowserRouter as Router, Link } from 'react-router-dom'\nimport Main from './components/main/Main'\nimport LoginForm from './components/login'\nimport Navbar from './components/navbar'\nimport Home from './components/home'\nimport Charts from './components/charts'\nimport Registration from './components/registration'\n\n@inject(\"store\")\n@observer\nclass App extends Component {\n  constructor() {\n    super()\n    // this.state = {\n    //   username: '',\n    //   id: -1,\n    //   password: '',\n    //   loggedIn: false \n    // } \n  }\n//   updateUser = (obj) =>{\n//     this.props.store.loggedIn = obj.loggedIn,\n//     this.props.store.id = obj.id,\n//     this.props.store.username = obj.username\n// } \n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n        <div className=\"title t-font\"></div>\n        <Navbar logout={this.props.store.logout} />  \n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/signup\" render={() => <Registration />}/>\n        <Route path=\"/login\" render={() => <LoginForm />}/>\n        <Route path=\"/main\" render={() => <Main logout={this.props.store.logout} loggedIn={this.props.store.loggedIn} id={this.props.store.id}/>}/> \n        <Route path=\"/statistics\" render={() => <Charts />}/>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { observable, action, computed, reaction } from \"mobx\";\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport AxiosFuncs from '../../components/main/AxiosFuncs';\nimport { Redirect } from 'react-router-dom';\nconst key='d808c36e40546d97843e42050e80a2a7';\nconst monthNames = {'1':\"Jan\", '2':\"Feb\", '3':\"Mar\", '4':\"Apr\", '5':\"May\", '6':\"Jun\", '7':\"Jul\", '8':\"Aug\", '9':\"Sept\", '10':\"Oct\", '11':\"Nov\", '12':\"Dec\"};\nclass DataStore {\n\t@observable username = \"\";\n\t// @observable password=\"\";\n\t@observable id = -1;\n\t@observable isLoading = true;\n\t@observable loggedIn = false;\n\t@observable showErrorMessage = false;\n\t@observable errorMessage = \"\";\n\t@observable allRecords = [];\n\t@observable dataExpense = [];\n\t@observable dataExpenseIncomeYear = [];\n\t@observable limitation = 2000;\n\t// @observable currency =\"NIS\";\n\t// @observable cFrom=\"\";\n\t// @observable cTo=\"\";\n\t// @observable cAmount=\"\";\n\n\t// @observable  currentUserIdForAddChild= {};\n\n\t@action getDataFromDB = () => {\n\t\tlet userId = 1;//this.props.id;\n\t\tconsole.log(\"GETDATAFROMDB\");\n\t\taxios.get(`/getData/${userId}`)\n\t\t\t.then(result => {\n\t\t\t\t// console.log(result.data[0].record);\n\t\t\t\tthis.allRecords = result.data[0].record;\n\t\t\t\tconsole.log(\"store allrecords\", this.allRecords);\n\t\t\t\tthis.isLoading = false;\n\t\t\t})\n\t}\n\n\t@action logout = () => {\n\t\tconsole.log(\"close\");\n\t\tthis.loggedIn = false;\n\t\t// return(\n\t\t// <Redirect to={{ pathname: '/login' }} />\n\t\t// )\n\t}\n\t@action toggle = () => {\n\t\tthis.showErrorMessage = !this.showErrorMessage;\n\t}\n\n\t@action generateNewData = () => {\n\t\tconsole.log(\"GENERATEDATA\", this.allRecords);\n\t\tlet categoryAmount = [], categories = [];\n\t\tlet income = [];\n\t\tthis.allRecords.forEach(function (item, i, arr) {\n\t\t\tconsole.log(\"item\");\n\t\t\tif (item.type !== 1) {\n\t\t\t\tlet index = categories.indexOf(item.category.name);\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tlet categoryName = item.category.name;\n\t\t\t\t\tconsole.log(\"category name\", categoryName, item.amount);\n\t\t\t\t\tcategoryAmount.push({ name: categoryName, amount: item.amount });\n\t\t\t\t\tcategories.push(categoryName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcategoryAmount[index].amount += item.amount;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// else {\n\t\t\t//     if (categoryAmount [item.category.name] == undefined) {\n\t\t\t//     let categoryName=item.category.name;\n\t\t\t//     income.push({name:categoryName, amount:item.amount})\n\t\t\t//     }\n\t\t\t//     else {\n\t\t\t//         income[item.category.name] += item.amount;\n\t\t\t//     }\n\t\t\t// }\n\t\t})\n\t\tconsole.log(\"catAmount\", categoryAmount, \"income\", income);\n\t\tthis.dataExpense = categoryAmount\n\t\t// this.setState({dataExpense: categoryAmount, dataIncome: income})\n\t\t// return categoryAmount;\n\t}\n\n\tgetDataForCharts = reaction(\n        () => (this.allRecords),\n        records => {\n            if (records.length) {\n\t\t\t\tthis.generateNewData();\n\t\t\t\tthis.generateNewDataYear();\n            }\n        }\n\t);\n\t@action showNavBar = () =>\n    <ul id=\"nav-bar\">\n      <li><Link to=\"/main\"><span>RECORDS</span></Link></li>\n      <li><Link to=\"/statistics\"><span>STATISTIC</span></Link></li>\n\t  \n\t  <div className=\"text-right\"><Link to=\"/\"><span onClick={this.logout}>LOGOUT</span></Link></div>\n\t   {/* <button type=\"button\" onClick={this.changeLimitation}>Add limit</button> */}\n    </ul>\n\t\n\t@action changeLimitation = () => {\n\t\t// let userId = 1;\n\t\t// newRecord.userId = 1;\n\t\tlet data={id:this.props.store.id, limitation: this.props.store.limitation};\n\t\tAxiosFuncs.putRequests(\"limitation\", data);\n\t  } \n\n\t@action generateNewDataYear = () => {\n\t\tlet data = this.allRecords;\n        let resultArray = [], monthAmount = {}, monthAmountIncome = {};\n        let currentDate = new Date();\n        let currentYear = currentDate.getFullYear();\n        for (let i = 0; i < data.length; i++) {\n            let clientTime = new Date(data[i].date);\n            if (clientTime.getFullYear() === currentYear) {\n\t\t\t\tlet recMonth = clientTime.getMonth();\n\t\t\t\tconsole.log(\"data type\",data[i].type);\n                if (data[i].type === 0) {\n                    monthAmount[recMonth] = (monthAmount[recMonth] !== undefined) ?\n                        monthAmount[recMonth] + data[i][\"amount\"] : data[i][\"amount\"];\n                }\n                else {\n\t\t\t\t\tdebugger;\n                    monthAmountIncome[recMonth] = (monthAmountIncome[recMonth] !== undefined) ?\n                        monthAmountIncome[recMonth] + data[i][\"amount\"] : data[i][\"amount\"];\n                }\n            }\n        }\n        console.log(\"monthAmount\",monthAmount);\n        console.log(\"monthAmountIncome\",monthAmountIncome);\n        for (let m = 1; m <= 12; m++) {\n            let current_month=monthNames[m];\n            let result = {\n                \"name\": current_month, \n                \"expense\": monthAmount[m] ,\n                \"income\": monthAmountIncome[m]\n            }\n            resultArray.push(result);\n        }\n    console.log(\"resultArray\", resultArray);\n     this.dataExpenseIncomeYear=resultArray \n\t}\n\n\t// @action closeUpdateModal = () => {\n\t// \tthis.showComponent = false;\n\t// }\n\n\taddNewUserToState = (newUser) => {\n\t\tthis.users.push(newUser);\n\t\tconsole.log(this.users);\n\t}\n\n\t@action convertCurrency = () =>{\n\t\t\tlet currency=this.currency\n\t\t\treturn axios.get(`http://data.fixer.io/api/convert?access_key=${key}&from=${this.cFrom}&to=${this.cTo}&amount=${this.cAmount}`)\n\t\t\t  .then(result => {\n\t\t\t\tconsole.log(result);\n\t\t\t  })\n\t\t\t  .catch(function (error) {\n\t\t\t\tconsole.log(\"Sorry, something wrong. Get request failed\", error);\n\t\t\t  });\t\t\n\t}\n}\n\nconst store = new DataStore();\nwindow.store = store;\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './js/store/dataStore';\nimport { Provider } from 'mobx-react';\nimport { Router, Link } from 'react-router-dom'\n\nwindow.store = store;\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n\nReactDOM.render(<Provider store={store}>\n                <App />\n            </Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}